{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","index","nextButton","newIndex","props","step","images","frameSize","infinite","length","setState","prevButton","this","itemWidth","animationDuration","className","style","width","transform","transition","map","image","src","alt","type","onClick","React","Component","App","fixItemWidth","event","value","target","console","log","fixFrameSize","fixStep","fixAnimationDuration","fixFinite","checked","action","method","onSubmit","preventDefault","htmlFor","id","name","min","max","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdc11590.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number\n  animationDuration: number,\n  infinite: boolean,\n};\n\n  type State = {\n    index: number,\n  };\n\nexport class Carousel extends React.Component<Props, State> {\n  state = { index: 0 };\n\n  nextButton = () => {\n    let newIndex: number;\n    const {\n      step,\n      images,\n      frameSize,\n      infinite,\n    } = this.props;\n    const { index } = this.state;\n\n    if (infinite) {\n      if (index + frameSize === images.length) {\n        newIndex = 0;\n      } else if (index + frameSize > images.length - step) {\n        newIndex = images.length - frameSize;\n      } else {\n        newIndex = index + step;\n      }\n\n      this.setState(() => ({\n        index: newIndex,\n      }));\n    } else {\n      if (index + frameSize > images.length - step) {\n        newIndex = images.length - frameSize;\n      } else {\n        newIndex = step + index;\n      }\n\n      this.setState(() => ({\n        index: newIndex,\n      }));\n    }\n  };\n\n  prevButton = () => {\n    let newIndex:number;\n    const {\n      step,\n      images,\n      frameSize,\n      infinite,\n    } = this.props;\n    const { index } = this.state;\n\n    if (infinite) {\n      if (index === 0) {\n        newIndex = images.length - frameSize;\n      } else if (index < step) {\n        newIndex = 0;\n      } else {\n        newIndex = index - step;\n      }\n\n      this.setState(() => ({\n        index: newIndex,\n      }));\n    } else {\n      if (index === 0 || index < step) {\n        newIndex = 0;\n      } else {\n        newIndex = index - step;\n      }\n\n      this.setState(() => ({\n        index: newIndex,\n      }));\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n    const { index } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"carousel\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          <ul\n            className=\"carousel__list\"\n            style={{\n              transform: `translateX(-${index * itemWidth}px)`,\n              transition: `transform ${animationDuration}ms linear`,\n            }}\n          >\n            {\n              images.map(image => (\n                <li className=\"carousel__item\" key={image}>\n                  <img\n                    className=\"carousel__img\"\n                    src={image}\n                    alt={`${index} + 1`}\n                    width={`${itemWidth}px`}\n                  />\n                </li>\n              ))\n            }\n          </ul>\n\n          <div className=\"carousel__buttons-container\">\n            <button\n              className=\"carousel__button carousel__button--prev\"\n              type=\"button\"\n              onClick={this.prevButton}\n            >\n              <img\n                src=\"./img/arrow-left.png\"\n                alt=\"Next button\"\n                width=\"50\"\n              />\n            </button>\n\n            <button\n              className=\"carousel__button carousel__button--next\"\n              type=\"button\"\n              data-cy=\"next\"\n              onClick={this.nextButton}\n            >\n              <img\n                src=\"./img/arrow-right.png\"\n                alt=\"Next button\"\n                width=\"50\"\n              />\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 1,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  fixItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    // eslint-disable-next-line no-console\n    console.log(value);\n    this.setState({ itemWidth: +value });\n  };\n\n  fixFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    // eslint-disable-next-line no-console\n    console.log(value);\n    this.setState({ frameSize: +value });\n  };\n\n  fixStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({ step: +value });\n  };\n\n  fixAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({ animationDuration: +value });\n  };\n\n  fixFinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = event.target;\n\n    this.setState({\n      infinite: checked,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <form\n          action=\"/\"\n          className=\"form\"\n          method=\"POST\"\n          onSubmit={(event) => {\n            event.preventDefault();\n          }}\n        >\n          <label htmlFor=\"itemWidth\" className=\"form__label\">\n            {' Item width '}\n          </label>\n          <input\n            id=\"itemWidth\"\n            name=\"itemWidth\"\n            className=\"form__input\"\n            type=\"number\"\n            min=\"50\"\n            max=\"300\"\n            defaultValue={itemWidth}\n            onChange={this.fixItemWidth}\n          />\n\n          <label htmlFor=\"frameSize\" className=\"form__label\">\n            {' Frame size '}\n          </label>\n          <input\n            id=\"frameSize\"\n            name=\"frameSize\"\n            className=\"form__input\"\n            type=\"number\"\n            min=\"1\"\n            max={images.length}\n            defaultValue={frameSize}\n            onChange={this.fixFrameSize}\n          />\n\n          <label htmlFor=\"step\" className=\"form__label\">\n            {' Step '}\n          </label>\n          <input\n            id=\"step\"\n            name=\"step\"\n            className=\"form__input\"\n            min=\"1\"\n            max=\"5\"\n            type=\"number\"\n            defaultValue={step}\n            onChange={this.fixStep}\n          />\n\n          <label htmlFor=\"infinite\" className=\"form__label\">\n            {' Animation duration '}\n          </label>\n          <input\n            id=\"animationDuration\"\n            name=\"animationDuration\"\n            className=\"form__input\"\n            type=\"number\"\n            defaultValue={animationDuration}\n            onChange={this.fixAnimationDuration}\n          />\n\n          <label htmlFor=\"infinite\" className=\"form__label\">\n            {' Infinite '}\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"checkbox\"\n            name=\"infinite\"\n            id=\"infinite\"\n            onChange={this.fixFinite}\n          />\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}